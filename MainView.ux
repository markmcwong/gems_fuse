<App>
	<Router ux:Name="router" />
	
	<iOS.StatusBarConfig Style="Dark" Animation="Slide" IsVisible="True" />
	<Android.StatusBarConfig Color="MainColor" />
	<JavaScript>
		var Observable = require("FuseJS/Observable");
		var clicked = Observable("signupButton");
		var menu = Observable("Visible");
		var values2 = Observable(["Sunday", "Monday", "Tuesday"]);
		var pages = [
			{"page":"Profile", "highlight":"#34495e", "icon":"Icons/physics.png"},
			{"page":"Notifications", "highlight":"#3498db", "icon":"Assets/icon-bell.png"},
			{"page":"LearningSpace", "highlight":"#aa3377", "icon":"Assets/icon-book.png"},
			{"page":"Settings", "highlight":"#88cc22", "icon":"Assets/icon-settings.png"}
		];
		var profiles = [
			{"page":"Report", "colour":"#34495e"},
			{"page":"Calendar", "colour":"#3498db"},
			{"page":"Timetable", "colour":"#aa3377"},
			{"page":"Learning Space", "colour":"#88cc22"}
		];

		var topbar_title = Observable("Home")
		var original = Observable("Home")
        var option_clicked = function(args){
			console.log(args.data.page)
			change_title(args.data.page)
			if (args.data.page == "Learning Space" || args.data.page ==  "LearningSpace" || args.data.page ==  "Profile" || args.data.page ==  "Settings" || args.data.page ==  "Notifications"){
				if (args.data.page == "Learning Space" || args.data.page ==  "LearningSpace"){
					router.goto("LearningSpace_Page");		
					menu = "Visible";	
				}else{
					router.goto(args.data.page+"_Page");		
				}
			}else{
				router.push(args.data.page+"_Page");
			}
        }
		var change_title = function(args){
			if(args.node){
				topbar_title.value = "Home"
			}else if(args == "Calendar"){
				topbar_title.value = "March 2018"				
			}else {
				topbar_title.value = args				
			}
		}
		function logged(e){
			console.log(JSON.stringify(e))
		}
		module.exports = {
			profiles: profiles,
			option_clicked: option_clicked,
			topbar_title: topbar_title,
			change_title: change_title,
			clicked: clicked,
			values2: values2,
			logged: logged,
			pages: pages,
			menu: menu
		};
	
	</JavaScript>
	<ClientPanel Color="White">
		<HidingPanel ux:Name="topPanel">
			<GridLayout Rows="60,1*" />
			<WhileEnabled>
				<Change navBarTrans.Y="0" Duration="0.4" />
			</WhileEnabled>
			<Grid Columns="70,1*,70"  ux:Name="navBar">
				<Translation ux:Name="navBarTrans" RelativeTo="Size" Y="-0.2" />
				<StackPanel Orientation="Horizontal" Margin="16,16,16,16" ItemSpacing="4">
					<WhileCanGoBack>
						<Panel Width="40" Height="40" HitTestMode="LocalBounds" Alignment="CenterLeft">
							<Clicked>
								<Set menu.Visibility="Visible"/>
								<GoBack/>
								<Callback Handler="{change_title}"/>
							</Clicked>
							<AddingAnimation>
								<Move X="-3" RelativeTo="Size" Duration="0.8" Easing="CubicIn" />
							</AddingAnimation>
							<Image File="Assets/icon-back.png" Alignment="Center" Height="60%" />
						</Panel>
						<Set menu.Visibility="Hidden"/>
					</WhileCanGoBack>
					<Panel HitTestMode="LocalBoundsAndChildren" ux:Name="menu" Visibility="{menu}">
						<Image File="Icons/menu.png" Width="30" Height="30" />
						<Clicked>
							<Scale Factor="0.8" Duration=".15" Easing="CubicInOut" />
							<Set state.Active="loginButtonState" />
						</Clicked>
					</Panel>
				</StackPanel>
				<Text Value="{topbar_title}" Color="White" FontSize="20" Alignment="VerticalCenter" />
				<Image File="Icons/search.png" Width="30" Height="30" />
			</Grid>
			<HidingPanel ux:Name="mainPanel">
				<DockPanel>
					<!-- <StatusBarBackground Dock="Top" /> -->
					<!-- <BottomBarBackground Dock="Bottom"/> -->
					<Panel Dock="Bottom" Height="45">
						<Grid ColumnCount="4">
							<Each Items="{pages}">
								<Panel Height="45" ux:Name="test" Clicked="{option_clicked}" ZOffset="10" Background="#333">								
									<ActivatingAnimation>
										<Scale Target="icon" Factor="1.5" />
									</ActivatingAnimation>
									<Panel ux:Name="icon" Padding="0" Height="25" Width="25">
										<Image File="{icon}"/>
									</Panel>
								</Panel>
							</Each>
						</Grid>
					</Panel>
					<Navigator DefaultPath="Profile_Page">
						<Page ux:Name="Profile_Page">
							<Rectangle Width="100%" Height="5%" Fill="#fff" Y="y(navBar)" ux:Name="greyBar" Opacity="0" Layer="Overlay">
								<Rectangle Alignment="Center" Fill="#D3D3D3" CornerRadius="20" Height="5" Width="10%"/>
							</Rectangle>
							<ScrollView>
								<StackPanel>
									<StackPanel Orientation="Vertical" ux:Name="Card">
										<Scrollbar/>
										<Panel Width="90%" Margin="0,5,0,0">
											<Grid Columns="150, 1*">
												<Text Value="Weekly report" FontSize="16" Margin="15"/>
												<Panel HitTestMode="LocalBoundsAndChildren" Alignment="TopRight" Margin="15">
													<Image File="Icons/Dashboard_Arrow.png" Width="15" Height="15" />
												</Panel>
											</Grid>
											<Panel xmlns:c="Fuse.Charting" Height="200" Margin="10,20,10,15">	
												<JavaScript>
													var Observable = require("FuseJS/Observable")

													function Item( value, label ) {
														this.value = value
														this.label = label
													}
													var values1 = Observable(
														new Item(7, "S"),
														new Item(20, "M"),
														new Item(13, "T"),
														new Item(27, "W"),
														new Item(15, "T")
													);
													module.exports = {
														values1: values1
													}
												</JavaScript>
												<Panel ux:Class="MyPlot">
													<int ux:Property="SeriesIndex" />
													<float4 ux:Property="MainColor" />
													<float4 ux:Property="BackgroundColor" />
													<Panel Opacity="1">
														<Curve StrokeWidth="2" StrokeColor="{ReadProperty MainColor}" Close="None">
															<c:PlotData SeriesIndex="{ReadProperty SeriesIndex}">
																<c:PlotCurvePoint />
																<c:PlotPoint>
																	<Circle Color="{ReadProperty MainColor}" Width="6" Height="6">
																		<Stroke Width="2" Color="#202B33" Alignment="Outside" />
																	</Circle>
																</c:PlotPoint>
															</c:PlotData>
														</Curve>
														
													</Panel>
													<!-- <Curve Close="None" Extrude="Bottom">
														<SolidColor Color="{ReadProperty BackgroundColor}" />
														<c:PlotData SeriesIndex="{ReadProperty SeriesIndex}">
															<c:PlotCurvePoint />
														</c:PlotData>
													</Curve> -->
												</Panel>
												<c:Plot >
													<c:DataSeries Data="{values1}" />
													<GridLayout Rows="1*, 20" />

													<MyPlot Row="0" MainColor="MainColor" BackgroundColor="MainColor" SeriesIndex="0" />
													<StackPanel Row="1" Margin="0, -20">
														<c:PlotAxis Axis="X">
															<Text ux:Template="Label" TextAlignment="Center" FontSize="15" 
																Color="#000" Value="{Plot axis.label}"/>
														</c:PlotAxis>	
														<Text Value="10 event in next 5 days" FontSize="14" Margin="5,10"/>
													</StackPanel> 
												</c:Plot>
												
											</Panel>
											<Rectangle Color="#fff" CornerRadius="5">
												<Shadow Size="5" Distance="0"/>
											</Rectangle>
										</Panel>
									</StackPanel>
									<DockPanel Height="height(topPanel) - 25" Margin="0,15,0,0" ux:Name="swipePanel" Offset="0,25%" ZOffset="100">
										<Rectangle Dock="Top" Fill="#D3D3D3" CornerRadius="20" Height="5" Width="10%" Margin="0,15"/>
										<StackPanel Orientation="Vertical" Dock="Top" Alignment="Top" Margin="0,-25">
											<Dashboard_Item first_child="50%"/>
											<Dashboard_Item first_child="100%"/>
											<Dashboard_Item first_child="100%"/>
											<Dashboard_Item first_child="100%"/>
											<Dashboard_Item first_child="100%"/>
											<Dashboard_Item first_child="100%"/>
											<Dashboard_Item first_child="100%"/>
											<Dashboard_Item first_child="100%"/>
											<Dashboard_Item first_child="100%"/>																																												
										</StackPanel>
										<Rectangle Color="#fff" Width="100%" Height="100%" Layer="Background"/>
										<DropShadow Size="10"/>
									</DockPanel>
									<ScrollingAnimation From="0" To="height(Card) - 20">
										<Change Card.Height="0" />
										<Move Target="Card" Y="0.55" RelativeTo="Size"/>
										<Change Card.Opacity="0" />
									</ScrollingAnimation>

									<ScrollingAnimation From="height(Card) + 10" To="height(Card) + 10 + height(swipePanel)">
										<Set greyBar.Opacity="1"/>
									</ScrollingAnimation>
									<ScrollingAnimation From="height(Card) + 15" To="0">
										<Set greyBar.Opacity="0"/>
									</ScrollingAnimation>
								</StackPanel>
							</ScrollView>
						</Page>
						<Calendar_Page ux:Name="Calendar_Page"/>
						<Timetable_Page ux:Name="Timetable_Page"/>
						<Report_Page ux:Name="Report_Page"/>
						<Notifications_Page ux:Name="Notifications_Page"/>									
						<LearningSpace_Page ux:Name="LearningSpace_Page"/>
					</Navigator>
				</DockPanel>
			</HidingPanel>
		</HidingPanel>

		<HidingPanel ux:Name="signupForm" Width="90%" Height="30%" Offset="0%,10%">
			<Grid RowCount="2" Margin="30,40,30,60">
				<TextInput ux:Name="usernameTI" PlaceholderText="Username" Opacity="1" Alignment="VerticalCenter" PlaceholderColor="#bbb" TextColor="#fff" CaretColor="#fff">
					<Rectangle Alignment="Bottom" Height="1" Layer="Background" Margin="0,25,0,0">
            			<Stroke Width="0.5" Brush="#FFF" />
        			</Rectangle>
				</TextInput>
				<TextInput ux:Name="passwordTI" PlaceholderText="Password" Opacity="1" Alignment="VerticalCenter" PlaceholderColor="#bbb" TextColor="#fff" CaretColor="#fff">
					<Rectangle  Margin="0,25,0,0" Alignment="Bottom" Height="1" Layer="Background">
            			<Stroke Width="0.5" Brush="#FFF" />
       				</Rectangle>
				</TextInput>
			</Grid>
			<WhileEnabled>
				<Change usernameTI.Opacity="1" Duration="0.4" />
				<Change passwordTI.Opacity="1" Duration="0.4" Delay="0.3" />
			</WhileEnabled>
			<Panel Layer="Overlay">
				<Panel ux:Name="submitButton" Width="100" Offset="0%,50%" Height="50" HitTestMode="LocalBoundsAndChildren">
					<Text Value="DONE" Alignment="Center" Color="White" />
					<Clicked>
						<Set state.Active="mainState" />
					</Clicked>
				</Panel>
				<Panel ux:Name="submitButtonCollapsed" Width="10" Offset="0%,50%" Height="10" />
			</Panel>
			<!-- <Rectangle Height="100%" Width="100%" Color="MainColor" CornerRadius="5"><DropShadow/></Rectangle> -->
		</HidingPanel>

		<HidingPanel ux:Name="startPanel" Alignment="Bottom" Height="30%" Padding="15,0,15,0">
		<StackPanel>
		
			<Panel ux:Name="signupButton" Width="80%" Height="70" Alignment="Top" HitTestMode="LocalBounds">
				<Text Value="Student" Alignment="Center" Color="#FFFFFF" HitTestMode="LocalBounds" />
				<Clicked>
					<Set state.Active="signupFormState" />
					<Set whiteRect.LayoutMaster="signupButton"/>
				</Clicked>
				<!-- <Rectangle Height="70" Width="100%" Color="MainColor" CornerRadius="15"><DropShadow/></Rectangle> -->
			</Panel>
			<Grid ColumnCount="2" Width="80%" Height="100%">
				<Panel ux:Name="parent" Height="100%" HitTestMode="LocalBounds" Margin="0,10,5,0">
					<Text Value="Parents" Alignment="Center" Color="#FFFFFF" HitTestMode="LocalBounds" />
					<Clicked>
						<Set state.Active="signupFormState" />
						<Set whiteRect.LayoutMaster="parent"/>
					</Clicked>
					<Rectangle Height="50" Width="100%" Color="MainColor" CornerRadius="5"><DropShadow/></Rectangle>
				</Panel>
				<Panel ux:Name="teacher" Height="100%" HitTestMode="LocalBounds" Margin="5,10,0,0">
					<Text Value="Teachers" Alignment="Center" Color="#FFFFFF" HitTestMode="LocalBounds" />
					<Clicked>
						<Set state.Active="signupFormState" />
						<Set whiteRect.LayoutMaster="teacher"/>
						<Callback Handler="{option_clicked}"/>
					</Clicked>
					<Rectangle Height="50" Width="100%" Color="MainColor" CornerRadius="5"><DropShadow/></Rectangle>
				</Panel>
			</Grid>
		</StackPanel>
			<!-- <Rectangle Color="BottomGray" Height="2" Width="55%" />
			<Rectangle Color="BottomGray" Height="2" Width="30%" /> -->
		</HidingPanel>

		<Panel ux:Name="addButtonPanel">
			<HidingPanel ux:Name="addButton" Width="50" Height="50" Alignment="BottomRight" Margin="40" HitTestMode="LocalBoundsAndChildren">
				<Text Value="+" FontSize="30" Color="White" Alignment="Center" />
			</HidingPanel>
			<Rectangle ux:Name="greenRect" Color="Green" LayoutMaster="submitButtonCollapsed" CornerRadius="25" Opacity="0">
				<Shadow />
				<WhileTrue ux:Name="showGreenRect">
					<Change greenRect.Opacity="1" Duration="0.2" />
				</WhileTrue>
			</Rectangle>
		</Panel>

		<Rectangle ux:Name="whiteRect" Color="MainColor" LayoutMaster="{clicked}" Layer="Background" CornerRadius="5"><DropShadow/></Rectangle>
		<Attractor ux:Name="whiteRectCornerRadiusAttractor" Target="whiteRect.CornerRadius" Value="10" Type="SmoothSnap" Unit="Points" />

		<HidingPanel ux:Name="logoPanel" Alignment="Top" Height="70%" IsEnabled="true" HitTestMode="None" Layer="Background">
			<StackPanel Alignment="Center">
				<Image ux:Name="logo" File="logo@3x.png" Width="50%" />
				<StackPanel ux:Name="logoMockText">
					<Rectangle Color="#a0a0a0"  Width="60%" Height="10" CornerRadius="5" Margin="0,40,0,0" />
					<Rectangle Color="#a0a0a0" Width="50%" Height="10" CornerRadius="5" Margin="0,16,0,0" />
				</StackPanel>
			</StackPanel>
			<WhileTrue ux:Name="moveLogo">
				<Change logoMockText.Opacity="0" Duration="0.4" />
				<Move Target="logo" Y="-0.6" RelativeTo="Size" Duration="0.5" Delay="0.3" Easing="CubicInOut" />
			</WhileTrue>

			<WhileKeyboardVisible>
				<Change logoPanel.IsEnabled="false" />
			</WhileKeyboardVisible>
		</HidingPanel>

		<StateGroup ux:Name="state" Transition="Exclusive" Rest="loginButtonState">
			<State Name="loginButtonState">
				<Move Target="whiteRect" RelativeTo="PositionOffset" RelativeNode="{clicked}"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Resize Target="whiteRect" RelativeTo="Size" RelativeNode="{clicked}"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Move Target="greenRect" RelativeTo="PositionOffset" RelativeNode="submitButtonCollapsed"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Resize Target="greenRect" RelativeTo="Size" RelativeNode="submitButtonCollapsed"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Set whiteRect.LayoutMaster="{clicked}" Delay="0.2" />
				<Set greenRect.LayoutMaster="submitButtonCollapsed" Delay="0.2" />

				<Set whiteRectCornerRadiusAttractor.Value="25" />
				<Set showGreenRect.Value="false" />

				<Change startPanel.IsEnabled="true" DelayBack="0" />
				<Set moveLogo.Value="false" />
				<SendToBack Target="addButtonPanel" />
			</State>
			<State Name="signupFormState">
				<Set whiteRectCornerRadiusAttractor.Value="5" />
				<Move Target="whiteRect" RelativeTo="PositionOffset" RelativeNode="signupForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="whiteRect" RelativeTo="Size" RelativeNode="signupForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />
				<Move Target="greenRect" RelativeTo="PositionOffset" RelativeNode="submitButton"
						Vector="1" Duration="0.4" Delay="0.5" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="greenRect" RelativeTo="Size" RelativeNode="submitButton"
						Vector="1" Duration="0.4" Delay="0.5" DurationBack="0" Easing="CubicInOut" />

				<Set whiteRect.LayoutMaster="signupForm" Delay="0.6" />
				<Set greenRect.LayoutMaster="submitButton" Delay="0.9" />

				<Change signupForm.IsEnabled="true" Delay="0.6" DelayBack="0" />
				<Set showGreenRect.Value="true" Delay="0.5" />
				<Set moveLogo.Value="true" />
			</State>
			<State Name="mainState">
				<Move Target="whiteRect" RelativeTo="PositionOffset" RelativeNode="mainPanel"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				<Resize Target="whiteRect" RelativeTo="Size" RelativeNode="mainPanel"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				<Move Target="greenRect" RelativeTo="PositionOffset" RelativeNode="addButton"
						Vector="1" Duration="0.4" Delay="0.4" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="greenRect" RelativeTo="Size" RelativeNode="addButton"
						Vector="1" Duration="0.4" Delay="0.4" DurationBack="0" Easing="CubicInOut" />

				<Set whiteRect.LayoutMaster="mainPanel" Delay="0.45" />
				<Set greenRect.LayoutMaster="addButton" Delay="0.85" />

				<Change whiteRect.CornerRadius="0" Duration="0.2" DurationBack="0" />
				<Change logoPanel.IsEnabled="false" />
				<Scale Target="greenRect" Delay="0.9" Factor="1.2" Duration="0.2" Easing="CubicInOut" />
				<Set whiteRectCornerRadiusAttractor.Value="0" />

				<Change mainPanel.IsEnabled="true" Delay="0.9" />
				<Change topPanel.IsEnabled="true" />
				<Set navBar.Color="MainColor" />

				<Change greenRect.Opacity="1" Duration="0" />
				<Change addButton.IsEnabled="true" Delay="0.5" />
				<Change whiteRect.Color="#FFFFFF" Duration="0.5"/>
				<BringToFront Target="addButtonPanel" />

			</State>
		</StateGroup>

	</ClientPanel>
</App>
