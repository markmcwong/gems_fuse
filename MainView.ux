<App>
	<Router ux:Name="router" />
	
	<iOS.StatusBarConfig Style="Dark" Animation="Slide" IsVisible="True" />
	<Android.StatusBarConfig Color="#000" />
	<JavaScript>
		var Observable = require("FuseJS/Observable");
		var clicked = Observable("signupButton");
		var values2 = Observable(["Sunday", "Monday", "Tuesday"]);

		var profiles = [
			{"name":"Homework", "colour":"#34495e"},
			{"name":"Calendar", "colour":"#3498db"},
			{"name":"Timetable", "colour":"#aa3377"},
			{"name":"Learning Space", "colour":"#88cc22"}
		];

		var topbar_title = Observable("Home")
		var original = Observable("Home")
        var option_clicked = function(args){
			router.push(args.data.name+"_Page");
			change_title(args.data.name)
        }
		var change_title = function(args){
			if(args.node){
				topbar_title.value = "Home"
			}else{
				topbar_title.value = args				
			}
		}
		module.exports = {
			profiles: profiles,
			option_clicked: option_clicked,
			topbar_title: topbar_title,
			change_title: change_title,
			clicked: clicked,
			values2: values2
		};
	
	</JavaScript>
	<ClientPanel Color="White">
		<HidingPanel ux:Name="topPanel">
			<GridLayout Rows="60,1*" />
			<WhileEnabled>
				<Change navBarTrans.Y="0" Duration="0.4" />
			</WhileEnabled>
			<Grid Columns="70,1*,70"  ux:Name="navBar">
				<Translation ux:Name="navBarTrans" RelativeTo="Size" Y="-0.2" />
				<StackPanel Orientation="Horizontal" Margin="16,16,16,16" ItemSpacing="4">
					<WhileCanGoBack>
						<Panel Width="40" Height="40" HitTestMode="LocalBounds" Alignment="CenterLeft">
							<Clicked>
								<Set menu.Visibility="Visible"/>
								<GoBack/>
								<Callback Handler="{change_title}"/>
							</Clicked>
							<AddingAnimation>
								<Move X="-3" RelativeTo="Size" Duration="0.8" Easing="CubicIn" />
							</AddingAnimation>
							<Image File="Assets/icon-back.png" Alignment="Center" Height="60%" />
						</Panel>
						<Set menu.Visibility="Hidden"/>
					</WhileCanGoBack>
					<Panel HitTestMode="LocalBoundsAndChildren" ux:Name="menu">
						<Image File="Icons/menu.png" Width="30" Height="30" />
						<Clicked>
							<Scale Factor="0.8" Duration=".15" Easing="CubicInOut" />
							<Set state.Active="loginButtonState" />
						</Clicked>
					</Panel>
				</StackPanel>
				<Text Value="{topbar_title}" Color="White" FontSize="20" Alignment="VerticalCenter" />
				<Image File="Icons/search.png" Width="30" Height="30" />
			</Grid>
			<HidingPanel ux:Name="mainPanel">
				<DockPanel>
					<!-- <StatusBarBackground Dock="Top" /> -->
					<!-- <BottomBarBackground Dock="Bottom"/> -->
					<PageIndicator Dock="Bottom" Height="45" Navigation="pages" Background="#000">
						<GridLayout ColumnCount="4" />
						<Panel ux:Template="Dot" Height="45">
							<!-- <ActivatingAnimation>
								<Scale Target="icon" Factor="1.5" />
							</ActivatingAnimation> -->
							<Clicked>
								<NavigateTo Target="{Page Visual}"/>
							</Clicked>
							<Panel ux:Name="icon" Padding="10">
								<Image Source="{Page Icon}" />
							</Panel>
							<Rectangle Color="{Page Highlight}" />
						</Panel>
					</PageIndicator>
					<Navigator DefaultPath="Profile">
						<Page ux:Name="Profile">
							<StackPanel Orientation="Vertical">
								<PageControl ux:Name="pages" Padding="0,5" Background="#FFF">
									<Nav_Tab icon="Assets/icon-profile.png">
										<StackPanel Orientation="Vertical">
											<Scrollbar/>
										</StackPanel>
									</Nav_Tab>
									<Nav_Tab icon="Assets/icon-bell.png"/>
									<Nav_Tab icon="Assets/icon-book.png"/>
									<Nav_Tab icon="Assets/icon-settings.png"/>											
								</PageControl>
								<Panel Width="90%" Margin="0,15,0,0">
									<Grid Columns="150, 1*">
										<Text Value="Weekly report" Margin="15"/>
										<Button/>
									</Grid>
									<Panel xmlns:c="Fuse.Charting" Height="200" Padding="10">	
										<JavaScript>
											var Observable = require("FuseJS/Observable")

											function Item( value, label ) {
												this.value = value
												this.label = label
											}
											var values1 = Observable(
												new Item(7, "S"),
												new Item(20, "M"),
												new Item(13, "T"),
												new Item(27, "W"),
												new Item(15, "T")
											);
											module.exports = {
												values1: values1
											}
										</JavaScript>
										<Panel ux:Class="MyPlot">
											<int ux:Property="SeriesIndex" />
											<float4 ux:Property="MainColor" />
											<float4 ux:Property="BackgroundColor" />
											<Panel Opacity="1">
												<Curve StrokeWidth="2" StrokeColor="{ReadProperty MainColor}" Close="None">
													<c:PlotData SeriesIndex="{ReadProperty SeriesIndex}">
														<c:PlotCurvePoint />
														<c:PlotPoint>
															<Circle Color="{ReadProperty MainColor}" Width="6" Height="6">
																<Stroke Width="2" Color="#202B33" Alignment="Outside" />
															</Circle>
														</c:PlotPoint>
													</c:PlotData>
												</Curve>
												
											</Panel>
											<!-- <Curve Close="None" Extrude="Bottom">
												<SolidColor Color="{ReadProperty BackgroundColor}" />
												<c:PlotData SeriesIndex="{ReadProperty SeriesIndex}">
													<c:PlotCurvePoint />
												</c:PlotData>
											</Curve> -->
										</Panel>
										<c:Plot >
											<c:DataSeries Data="{values1}" />
											<GridLayout Rows="1*, 20" />

											<MyPlot Row="0" MainColor="MainColor" BackgroundColor="MainColor" SeriesIndex="0" />
											<Panel Row="1">
												<c:PlotAxis Axis="X">
													<Text ux:Template="Label" TextAlignment="Center" FontSize="15" 
														Color="#000" Value="{Plot axis.label}"/>
												</c:PlotAxis>	
											</Panel> 
										</c:Plot>
										
									</Panel>
									<Rectangle Color="#fff" CornerRadius="10">
										<Shadow Size="10"/>
									</Rectangle>
								</Panel>
							</StackPanel>
						</Page>
						<Calendar_Page ux:Name="Calendar_Page"/>
						<Page ux:Name="Homework_Page" Background="#FFF">
						</Page>			
						<Page ux:Name="Timetable_Page" Background="#FFF">
						</Page>	
					</Navigator>
				</DockPanel>
			</HidingPanel>
		</HidingPanel>

		<HidingPanel ux:Name="signupForm" Width="90%" Height="30%" Offset="0%,10%">
			<Grid RowCount="2" Margin="30,40,30,60">
				<TextInput ux:Name="usernameTI" PlaceholderText="Username" Opacity="1" Alignment="VerticalCenter" PlaceholderColor="#bbb" TextColor="#fff" CaretColor="#fff">
					<Rectangle Alignment="Bottom" Height="1" Layer="Background" Margin="0,25,0,0">
            			<Stroke Width="0.5" Brush="#FFF" />
        			</Rectangle>
				</TextInput>
				<TextInput ux:Name="passwordTI" PlaceholderText="Password" Opacity="1" Alignment="VerticalCenter" PlaceholderColor="#bbb" TextColor="#fff" CaretColor="#fff">
					<Rectangle  Margin="0,25,0,0" Alignment="Bottom" Height="1" Layer="Background">
            			<Stroke Width="0.5" Brush="#FFF" />
       				</Rectangle>
				</TextInput>
			</Grid>
			<WhileEnabled>
				<Change usernameTI.Opacity="1" Duration="0.4" />
				<Change passwordTI.Opacity="1" Duration="0.4" Delay="0.3" />
			</WhileEnabled>
			<Panel Layer="Overlay">
				<Panel ux:Name="submitButton" Width="100" Offset="0%,50%" Height="50" HitTestMode="LocalBoundsAndChildren">
					<Text Value="DONE" Alignment="Center" Color="White" />
					<Clicked>
						<Set state.Active="mainState" />
					</Clicked>
				</Panel>
				<Panel ux:Name="submitButtonCollapsed" Width="10" Offset="0%,50%" Height="10" />
			</Panel>
			<!-- <Rectangle Height="100%" Width="100%" Color="MainColor" CornerRadius="5"><DropShadow/></Rectangle> -->
		</HidingPanel>

		<HidingPanel ux:Name="startPanel" Alignment="Bottom" Height="30%" Padding="15,0,15,0">
		<StackPanel>
		
			<Panel ux:Name="signupButton" Width="80%" Height="70" Alignment="Top" HitTestMode="LocalBounds">
				<Text Value="Student" Alignment="Center" Color="#FFFFFF" HitTestMode="LocalBounds" />
				<Clicked>
					<Set state.Active="signupFormState" />
					<Set whiteRect.LayoutMaster="signupButton"/>
				</Clicked>
				<!-- <Rectangle Height="70" Width="100%" Color="MainColor" CornerRadius="15"><DropShadow/></Rectangle> -->
			</Panel>
			<Grid ColumnCount="2" Width="80%" Height="100%">
				<Panel ux:Name="parent" Height="100%" HitTestMode="LocalBounds" Margin="0,10,5,0">
					<Text Value="Parents" Alignment="Center" Color="#FFFFFF" HitTestMode="LocalBounds" />
					<Clicked>
						<Set state.Active="signupFormState" />
						<Set whiteRect.LayoutMaster="parent"/>
					</Clicked>
					<Rectangle Height="50" Width="100%" Color="MainColor" CornerRadius="10"><DropShadow/></Rectangle>
				</Panel>
				<Panel ux:Name="teacher" Height="100%" HitTestMode="LocalBounds" Margin="5,10,0,0">
					<Text Value="Teachers" Alignment="Center" Color="#FFFFFF" HitTestMode="LocalBounds" />
					<Clicked>
						<Set state.Active="signupFormState" />
						<Set whiteRect.LayoutMaster="teacher"/>
						<Callback Handler="{option_clicked}"/>
					</Clicked>
					<Rectangle Height="50" Width="100%" Color="MainColor" CornerRadius="10"><DropShadow/></Rectangle>
				</Panel>
			</Grid>
		</StackPanel>
			<!-- <Rectangle Color="BottomGray" Height="2" Width="55%" />
			<Rectangle Color="BottomGray" Height="2" Width="30%" /> -->
		</HidingPanel>

		<Panel ux:Name="addButtonPanel">
			<HidingPanel ux:Name="addButton" Width="50" Height="50" Alignment="BottomRight" Margin="40" HitTestMode="LocalBoundsAndChildren">
				<Text Value="+" FontSize="30" Color="White" Alignment="Center" />
			</HidingPanel>
			<Rectangle ux:Name="greenRect" Color="Green" LayoutMaster="submitButtonCollapsed" CornerRadius="25" Opacity="0">
				<Shadow />
				<WhileTrue ux:Name="showGreenRect">
					<Change greenRect.Opacity="1" Duration="0.2" />
				</WhileTrue>
			</Rectangle>
		</Panel>

		<Rectangle ux:Name="whiteRect" Color="MainColor" LayoutMaster="{clicked}" Layer="Background" CornerRadius="10"><DropShadow/></Rectangle>
		<Attractor ux:Name="whiteRectCornerRadiusAttractor" Target="whiteRect.CornerRadius" Value="10" Type="SmoothSnap" Unit="Points" />

		<HidingPanel ux:Name="logoPanel" Alignment="Top" Height="70%" IsEnabled="true" HitTestMode="None" Layer="Background">
			<StackPanel Alignment="Center">
				<Image ux:Name="logo" File="logo@3x.png" Width="50%" />
				<StackPanel ux:Name="logoMockText">
					<Rectangle Color="#a0a0a0"  Width="60%" Height="10" CornerRadius="5" Margin="0,40,0,0" />
					<Rectangle Color="#a0a0a0" Width="50%" Height="10" CornerRadius="5" Margin="0,16,0,0" />
				</StackPanel>
			</StackPanel>
			<WhileTrue ux:Name="moveLogo">
				<Change logoMockText.Opacity="0" Duration="0.4" />
				<Move Target="logo" Y="-0.6" RelativeTo="Size" Duration="0.5" Delay="0.3" Easing="CubicInOut" />
			</WhileTrue>

			<WhileKeyboardVisible>
				<Change logoPanel.IsEnabled="false" />
			</WhileKeyboardVisible>
		</HidingPanel>

		<StateGroup ux:Name="state" Transition="Exclusive" Rest="loginButtonState">
			<State Name="loginButtonState">
				<Move Target="whiteRect" RelativeTo="PositionOffset" RelativeNode="{clicked}"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Resize Target="whiteRect" RelativeTo="Size" RelativeNode="{clicked}"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Move Target="greenRect" RelativeTo="PositionOffset" RelativeNode="submitButtonCollapsed"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Resize Target="greenRect" RelativeTo="Size" RelativeNode="submitButtonCollapsed"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Set whiteRect.LayoutMaster="{clicked}" Delay="0.2" />
				<Set greenRect.LayoutMaster="submitButtonCollapsed" Delay="0.2" />

				<Set whiteRectCornerRadiusAttractor.Value="25" />
				<Set showGreenRect.Value="false" />

				<Change startPanel.IsEnabled="true" DelayBack="0" />
				<Set moveLogo.Value="false" />
				<SendToBack Target="addButtonPanel" />
			</State>
			<State Name="signupFormState">
				<Set whiteRectCornerRadiusAttractor.Value="5" />
				<Move Target="whiteRect" RelativeTo="PositionOffset" RelativeNode="signupForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="whiteRect" RelativeTo="Size" RelativeNode="signupForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />
				<Move Target="greenRect" RelativeTo="PositionOffset" RelativeNode="submitButton"
						Vector="1" Duration="0.4" Delay="0.5" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="greenRect" RelativeTo="Size" RelativeNode="submitButton"
						Vector="1" Duration="0.4" Delay="0.5" DurationBack="0" Easing="CubicInOut" />

				<Set whiteRect.LayoutMaster="signupForm" Delay="0.6" />
				<Set greenRect.LayoutMaster="submitButton" Delay="0.9" />

				<Change signupForm.IsEnabled="true" Delay="0.6" DelayBack="0" />
				<Set showGreenRect.Value="true" Delay="0.5" />
				<Set moveLogo.Value="true" />
			</State>
			<State Name="mainState">
				<Move Target="whiteRect" RelativeTo="PositionOffset" RelativeNode="mainPanel"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				<Resize Target="whiteRect" RelativeTo="Size" RelativeNode="mainPanel"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				<Move Target="greenRect" RelativeTo="PositionOffset" RelativeNode="addButton"
						Vector="1" Duration="0.4" Delay="0.4" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="greenRect" RelativeTo="Size" RelativeNode="addButton"
						Vector="1" Duration="0.4" Delay="0.4" DurationBack="0" Easing="CubicInOut" />

				<Set whiteRect.LayoutMaster="mainPanel" Delay="0.45" />
				<Set greenRect.LayoutMaster="addButton" Delay="0.85" />

				<Change whiteRect.CornerRadius="0" Duration="0.2" DurationBack="0" />
				<Change logoPanel.IsEnabled="false" />
				<Scale Target="greenRect" Delay="0.9" Factor="1.2" Duration="0.2" Easing="CubicInOut" />
				<Set whiteRectCornerRadiusAttractor.Value="0" />

				<Change mainPanel.IsEnabled="true" Delay="0.9" />
				<Change topPanel.IsEnabled="true" />
				<Set navBar.Color="MainColor" />

				<Change greenRect.Opacity="1" Duration="0" />
				<Change addButton.IsEnabled="true" Delay="0.5" />
				<Change whiteRect.Color="#FFFFFF" Duration="0.5"/>
				<BringToFront Target="addButtonPanel" />

			</State>
		</StateGroup>

	</ClientPanel>
</App>
